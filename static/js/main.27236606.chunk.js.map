{"version":3,"sources":["redux/constants/actionTypes.js","redux/actions/countActions.js","components/productHome.js","components/selectedProduct.js","App.js","reportWebVitals.js","redux/reducer/reducer.js","redux/reducer/index.js","redux/store.js","index.js","network/apiCalls.js"],"names":["actionTypes","api","require","withRouter","data","useSelector","product","products","dispatch","useDispatch","useEffect","console","log","ReactGA","pageview","window","location","pathname","search","a","getData","response","type","payload","class","href","style","marginTop","marginLeft","marginRight","CardGroup","itemsPerRow","map","m","Card","Content","height","Image","src","image","size","Description","Header","overflowY","to","id","title","price","Meta","padding","description","extra","Icon","name","rating","rate","useParams","dispath","productById","getDataByID","setData","className","width","marginBottom","paddingLeft","category","tabIndex","App","initialize","basename","path","exact","component","ProductPage","SelectedProduct","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducers","combineReducers","state","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","Promise","resolve","reject","axios","get","res","catch","err"],"mappings":"4TAAaA,G,MACC,YADDA,EAEC,WAFDA,EAGI,cCAXC,EAAMC,EAAQ,I,eC0ELC,GArEHD,EAAQ,IAqELC,aAnEK,WAClB,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAaA,EAAQC,SAASA,YACjDC,EAAWC,cASjB,OAPAC,qBAAU,WACRC,QAAQC,IAAI,kBAEZC,IAAQC,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,QAC5DV,EDbmB,uCAAM,WAAOA,GAAP,eAAAW,EAAA,sEACJlB,EAAImB,UADA,OACrBC,EADqB,OAE3Bb,EAAS,CAAEc,KAAMtB,EAAsBuB,QAASF,IAFrB,2CAAN,yDCclB,IAGD,qCACE,qBAAKG,MAAM,SAAX,SACE,mBAAGA,MAAM,SAASC,KAAK,IAAvB,4BAIF,qBACEC,MAAO,CAAEC,UAAW,OAAQC,WAAY,OAAQC,YAAa,QAD/D,SAGE,cAACC,EAAA,EAAD,CAAWC,YAAa,EAAxB,SACG3B,EACCA,EAAK4B,KAAI,SAACC,GAAD,OACP,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,QAAN,WACE,qBAAKT,MAAO,CAAEU,OAAQ,SAAtB,SACE,cAACC,EAAA,EAAD,CAAOC,IAAKL,EAAEM,MAAOC,KAAK,YAG5B,eAACN,EAAA,EAAKO,YAAN,WACE,cAACP,EAAA,EAAKQ,OAAN,UACE,qBAAKhB,MAAO,CAAEU,OAAQ,OAAQO,UAAW,UAAzC,SACE,cAAC,IAAD,CAAMC,GAAE,kBAAaX,EAAEY,IAAvB,SAA8BZ,EAAEa,YAGpC,eAACZ,EAAA,EAAKQ,OAAN,gBAAgBT,EAAEc,SAClB,cAACb,EAAA,EAAKc,KAAN,UACE,qBACEtB,MAAO,CACLU,OAAQ,QACRO,UAAW,SACXM,QAAS,uBAJb,SAOGhB,EAAEiB,sBAKX,cAAChB,EAAA,EAAKC,QAAN,CAAcgB,OAAK,EAAnB,SACE,eAACjB,EAAA,EAAKQ,OAAN,WACE,cAACU,EAAA,EAAD,CAAMC,KAAK,SACVpB,EAAEqB,OAAOC,KAFZ,cA3BOtB,EAAEY,OAmCf,8DCOG1C,GAnEHD,EAAQ,IAmELC,aAjES,WACtB,IAAQ0C,EAAOW,cAAPX,GACFY,EAAUhD,cAEViD,EAAcrD,aAAY,SAACC,GAAD,OAAaA,EAAQC,SAASmD,eAW9D,OATAhD,qBAAU,WAIR,OAFAG,IAAQC,SAASC,OAAOC,SAASC,SAAWF,OAAOC,SAASE,QACxD2B,GAAa,KAAPA,GAAWY,EFVF,SAACZ,GAAD,8CAAQ,WAAOrC,GAAP,eAAAW,EAAA,sEACNlB,EAAI0D,YAAYd,GADV,OACvBxB,EADuB,OAE7Bb,EAAS,CAAEc,KAAMtB,EAAsBuB,QAASF,IAFnB,2CAAR,sDEUUuC,CAAQf,IAC9B,WACLY,EFNG,CACLnC,KAAMtB,EACNuB,QAAS,UEMR,IAGD,qCACE,sBAAKC,MAAM,SAAX,UACE,mBAAGA,MAAM,SAASC,KAAK,IAAvB,0BAGA,oBAAGA,KAAK,IAAR,uCAAgCiC,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAaZ,MAA7C,UAEF,qBACEe,UAAU,yBACVnC,MAAO,CAAEoC,MAAO,MAAOlC,WAAY,OAFrC,SAIE,qBACEiC,UAAU,8CACVnC,MAAO,CACLC,UAAW,OACXoC,aAAc,QAJlB,SAOGL,EACC,sBAAKG,UAAU,qBAAf,UACE,qBAAKA,UAAU,YAAYnC,MAAO,CAAEsC,YAAa,SAAjD,SACE,cAAC3B,EAAA,EAAD,CAAOC,IAAG,OAAEoB,QAAF,IAAEA,OAAF,EAAEA,EAAanB,MAAOC,KAAK,YAEvC,sBAAKqB,UAAU,YAAf,UACE,oCAAKH,QAAL,IAAKA,OAAL,EAAKA,EAAaZ,QAClB,6BACE,oBAAGe,UAAU,oBAAb,qBAAmCH,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAaX,WAElD,oBAAIc,UAAU,wBAAd,gBACGH,QADH,IACGA,OADH,EACGA,EAAaO,WAEhB,mCAAIP,QAAJ,IAAIA,OAAJ,EAAIA,EAAaR,cACjB,sBAAKW,UAAU,8BAA8BK,SAAS,IAAtD,UACE,qBAAKL,UAAU,iBAAf,SACE,mBAAGA,UAAU,gBAEf,qBAAKA,UAAU,kBAAf,kCAKN,8DC1CGM,MAnBf,WAGE,OAFAtD,IAAQuD,WAAW,gBAGjB,qBAAKP,UAAU,MAAf,SAOE,eAAC,IAAD,CAAYQ,SAAS,IAArB,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,cAAC,IAAD,CAAOH,KAAK,eAAeE,UAAWE,UCR/BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,yBCLRQ,EAAe,GCCfC,EAAWC,YAAgB,CAC7B/E,SDA8B,WAA8C,IAA7CgF,EAA4C,uDAApCH,EAAoC,yCAApB9D,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC/D,OAAQD,GACN,KAAKtB,EACH,OAAO,2BAAKuF,GAAZ,IAAmBhF,SAAUgB,IAC/B,KAAKvB,EACH,OAAO,2BAAKuF,GAAZ,IAAmB7B,YAAanC,IAClC,KAAKvB,EACH,OAAO,2BAAKuF,GAAZ,IAAmB7B,YAAa,KAClC,QACE,OAAO6B,MCNEF,ICHTG,EAAmBzE,OAAO0E,sCAAwCC,IAIzDC,EAFDC,YAAYP,EAAUG,EAAiBK,YAAgBC,OCGrEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,SAM1BxB,K,gCCrBA,gHAEavD,EAAU,WACrB,OAAO,IAAIgF,SAAQ,SAACC,EAASC,GAC3BC,IACGC,IAAI,qCACJ1B,MAAK,SAAC2B,GAAD,OAASJ,EAAQI,EAAIrG,SAC1BsG,OAAM,SAACC,GAAD,OAASL,EAAOK,UAIhBhD,EAAc,SAACd,GAC1B,OAAO,IAAIuD,SAAQ,SAACC,EAASC,GAC3BC,IACGC,IAAI,qCAAuC3D,GAC3CiC,MAAK,SAAC2B,GAAD,OAASJ,EAAQI,EAAIrG,SAC1BsG,OAAM,SAACC,GAAD,OAASL,EAAOK,Y","file":"static/js/main.27236606.chunk.js","sourcesContent":["export const actionTypes = {\n    GET_DATA: 'GET_DATA',\n    SET_DATA: 'SET_DATA',\n    REMOVE_DATA: 'REMOVE_DATA'\n}","import axios from \"axios\";\nimport { actionTypes } from \"../constants/actionTypes\";\n\nconst api = require(\"../../network/apiCalls\");\n\nexport const getData = () => async (dispatch) => {\n  const response = await api.getData();\n  dispatch({ type: actionTypes.GET_DATA, payload: response });\n};\n\nexport const setData = (id) => async (dispatch) => {\n  const response = await api.getDataByID(id);\n  dispatch({ type: actionTypes.SET_DATA, payload: response });\n};\n\nexport const removeData = () => {\n  return {\n    type: actionTypes.REMOVE_DATA,\n    payload: null,\n  };\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardGroup, Icon, Image } from \"semantic-ui-react\";\nimport { getData } from \"../redux/actions/countActions\";\nimport ReactGA from \"react-ga\"\nimport { withRouter } from \"react-router\";\n\nconst api = require(\"../network/apiCalls\");\n\nconst ProductPage = () => {\n  const data = useSelector((product) => product.products.products);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log(\"new deployment\")\n    // ReactGA.pageview('/productHome');\n    ReactGA.pageview(window.location.pathname + window.location.search)\n    dispatch(getData());\n  }, []);\n\n  return (\n    <>\n      <div class=\"topnav\">\n        <a class=\"active\" href=\"#\">\n          Product List\n        </a>\n      </div>\n      <div\n        style={{ marginTop: \"10px\", marginLeft: \"10px\", marginRight: \"10px\" }}\n      >\n        <CardGroup itemsPerRow={5}>\n          {data ? (\n            data.map((m) => (\n              <Card key={m.id}>\n                <Card.Content>\n                  <div style={{ height: \"270px\" }}>\n                    <Image src={m.image} size=\"small\" />\n                  </div>\n\n                  <Card.Description>\n                    <Card.Header>\n                      <div style={{ height: \"60px\", overflowY: \"scroll\" }}>\n                        <Link to={`product/${m.id}`}>{m.title}</Link>\n                      </div>\n                    </Card.Header>\n                    <Card.Header>$ {m.price}</Card.Header>\n                    <Card.Meta>\n                      <div\n                        style={{\n                          height: \"200px\",\n                          overflowY: \"scroll\",\n                          padding: \"15px 15px 15px 15px\",\n                        }}\n                      >\n                        {m.description}\n                      </div>\n                    </Card.Meta>\n                  </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  <Card.Header>\n                    <Icon name=\"star\" />\n                    {m.rating.rate} / 5\n                  </Card.Header>\n                </Card.Content>\n              </Card>\n            ))\n          ) : (\n            <h1>Data loading.....</h1>\n          )}\n        </CardGroup>\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(ProductPage);\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { removeData, setData } from \"../redux/actions/countActions\";\nimport { Image } from \"semantic-ui-react\";\nimport ReactGA from \"react-ga\";\nimport { withRouter } from \"react-router\";\n// import { Link } from \"react-router-dom\";\n\nconst api = require(\"../network/apiCalls\");\n\nconst SelectedProduct = () => {\n  const { id } = useParams();\n  const dispath = useDispatch();\n\n  const productById = useSelector((product) => product.products.productById);\n\n  useEffect(() => {\n    // ReactGA.pageview(`/selectedProduct/${id}`);\n    ReactGA.pageview(window.location.pathname + window.location.search);\n    if (id && id !== \"\") dispath(setData(id));\n    return () => {\n      dispath(removeData());\n    };\n  }, []);\n\n  return (\n    <>\n      <div class=\"topnav\">\n        <a class=\"active\" href=\"/\">\n          Product List\n        </a>\n        <a href=\"#\">Selected Product : {productById?.title} </a>\n      </div>\n      <div\n        className=\"ui placeholder segment\"\n        style={{ width: \"80%\", marginLeft: \"10%\" }}\n      >\n        <div\n          className=\"ui two column stackable center aligned grid\"\n          style={{\n            marginTop: \"2.5%\",\n            marginBottom: \"2.5%\",\n          }}\n        >\n          {productById ? (\n            <div className=\"middle aligned row\">\n              <div className=\"column lp\" style={{ paddingLeft: \"100px\" }}>\n                <Image src={productById?.image} size=\"large\" />\n              </div>\n              <div className=\"column rp\">\n                <h1>{productById?.title}</h1>\n                <h2>\n                  <a className=\"ui teal tag label\">${productById?.price}</a>\n                </h2>\n                <h3 className=\"ui brown block header\">\n                  {productById?.category}\n                </h3>\n                <p>{productById?.description}</p>\n                <div className=\"ui vertical animated button\" tabIndex=\"0\">\n                  <div className=\"hidden content\">\n                    <i className=\"shop icon\"></i>\n                  </div>\n                  <div className=\"visible content\">Add to Cart</div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <h1>Data loading.....</h1>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(SelectedProduct);\n","import \"./App.css\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { HashRouter, Route, Link } from \"react-router-dom\"\nimport \"semantic-ui-css/semantic.min.css\";\nimport ProductPage from \"./components/productHome\";\nimport SelectedProduct from \"./components/selectedProduct\";\nimport ReactGA from \"react-ga\";\nfunction App() {\n  ReactGA.initialize(\"G-W8CZWN17XP\");\n\n  return (\n    <div className=\"App\">\n      {/* <Router>\n        <Switch>\n          <Route path=\"/\" exact component={ProductPage} />\n          <Route path=\"/product/:id\" component={SelectedProduct} />\n        </Switch>\n      </Router> */}\n      <HashRouter basename=\"/\">\n        <Route path=\"/\" exact component={ProductPage} />\n        <Route path=\"/product/:id\" component={SelectedProduct} />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { actionTypes } from \"../constants/actionTypes\";\n\nconst initialState = {};\n\nexport const productDataReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case actionTypes.GET_DATA:\n      return { ...state, products: payload };\n    case actionTypes.SET_DATA:\n      return { ...state, productById: payload };\n    case actionTypes.REMOVE_DATA:\n      return { ...state, productById: {} };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { productDataReducer } from \"./reducer\";\n\nconst reducers = combineReducers({\n    products: productDataReducer\n});\n\nexport default reducers;","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducer/index\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axios from \"axios\";\n\nexport const getData = () => {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(\"https://fakestoreapi.com/products\")\n      .then((res) => resolve(res.data))\n      .catch((err) => reject(err));\n  });\n};\n\nexport const getDataByID = (id) => {\n  return new Promise((resolve, reject) => {\n    axios\n      .get(\"https://fakestoreapi.com/products/\" + id)\n      .then((res) => resolve(res.data))\n      .catch((err) => reject(err));\n  });\n};\n"],"sourceRoot":""}